// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int         @id @default(autoincrement())
  email    String      @unique
  password String
  name     String
  avatar   String?
  gender   GenderEnum?
  phone    String?
  address  String?
  product  Product[]
  order    Order[]
  role     RoleEnum    @default(USER)
  cart     Cart?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("user")
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  description String
  image       String?
  price       Int
  stock       Int
  categoryId  Int
  userId      Int
  category    Category    @relation(fields: [categoryId], references: [id])
  user        User        @relation(fields: [userId], references: [id])
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  OrderItem   OrderItem[]
  CartItem    CartItem[]

  @@map("product")
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]

  @@map("category")
}

model Cart {
  id         Int        @id @default(autoincrement())
  userId     Int        @unique
  user       User       @relation(fields: [userId], references: [id])
  cartItems  CartItem[]
  totalPrice Int        @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("cart")
}

model CartItem {
  id         Int     @id @default(autoincrement())
  cartId     Int
  productId  Int
  quantity   Int
  product    Product @relation(fields: [productId], references: [id])
  cart       Cart    @relation(fields: [cartId], references: [id])
  totalPrice Int     @default(0)

  @@map("cartItem")
}

model Order {
  id         Int         @id @default(autoincrement())
  userId     Int
  total      Int
  createdAt  DateTime    @default(now())
  user       User        @relation(fields: [userId], references: [id])
  orderItems OrderItem[]

  @@map("order")
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Int
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@map("orderItem")
}

enum RoleEnum {
  ADMIN
  USER
}

enum GenderEnum {
  MALE
  FEMALE
  DEMIGOD
}
